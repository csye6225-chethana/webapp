name: Run webapp integration tests and then build custom AMI with Packer
 
on:
  pull_request:
    branches:
      - main-copy
 
jobs:
  integration_tests:
    name: Run webapp integration tests
    runs-on: ubuntu-latest
 
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
 
      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
 
      - name: Run database migrations
        env:                
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          source venv/bin/activate
          python manage.py makemigrations
          python manage.py migrate
 
      - name: Run tests
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          source venv/bin/activate
          python manage.py test
 
  build-image:
    name: Build custom AMI with Packer
    runs-on: ubuntu-latest
    needs: integration_tests
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Zip repository code
        run: |
          zip -r webapp.zip .
 
      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
 
      - name: Packer setup
        uses: hashicorp/setup-packer@main
        with:
          packer-version: 1.7.4
 
      - name: List directories
        run: ls -al
 
      - name: Run Packer
        run: |
          cd aws-packer
          packer init aws.pkr.hcl
          packer build aws.pkr.hcl